# 2 номер
print('x,y,z,w')
print(f'сумма = {x}')
for i in range(1,100,2): - это (start,stop,step)
for i in s: где (s - список)
if(not((y<=w) or (z<=w)) or not(z))==False:
(<=) - импликация
or - или
and - и
== - сравнимо
if not(sp): (sp - список) если нет элементов то будет 0, а если есть то 1

# 5 номер
bin(5)[2:] - первые 2 цифры не нужны и мы их срезаем
[2:6] - срез с 2 по 6 символ
num[::-1] - читать список с конца
num[:3] - срез с конца 3 символа
int('10101',2) - перевод в десятичную
num.count('1') - считать количество 1 в списе num
break - обрывает цикл
continue - пропускает итерацию цикла
pass - запускает программу но не пропускает действие под котором находится

# 6 номер
from turtle import*
left(90) - поворот на 90 градусов влево
right(120) - поворот на 120 градусов вправо
forward(300) - вперёд на 300 пикселей
pu() - опустить/поднять перо
goto(x*30;y*30) - расствить точки в треугольнике
dot(5) - насколько жирные точки

# 8 номер
str(2) - перевод в строку
s.index('6') - поиск числа с индексом 6
len(s) - длина s
10//2 - целое число от деления 10 на 2
10%2 - остаток от деления 10 на 2
s[0] - получить 1 элемент списка
num.product('12', repeat=s)
n.split(',') - создание списка через запятую
n=','.join(s) - сделать из списка строку
s=[] - пустой список
s.append(10) - добавить 10 в список/строку

# 12 номер
if all(num%delit!=0 for delit in range(2,num)): - если все условия выполняются то что-то делает

# 16 номер
def f(n):
sys.setrecursionlimit(2500) - установить лимит рекурсий
s=s.repleace('А', 'O')

# 17 номер
with open('17.txt') as f: - открыть файл
n=[x for x in f] - многостороннее чтение файла
n=f.readline() - прочитать односторонне файл
a= abs(-1) - модуль числа -1
max(2,3,10)
min(2,3,10)
** - степень

# 23 номер
a=+1 - это a=a+1

# 25 номер
s=sorted(s ,reverse=True)
s.sort(reverse=True) - сортроваить сиписок по убыванию и пустое по возрастанию
